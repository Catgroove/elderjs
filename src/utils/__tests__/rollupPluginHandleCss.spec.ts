import rollupPluginHandleCss, { splitCssSourceMap } from '../rollupPluginHandleCss';

// simple.css
const cssCode1 = `a.svelte-6ghev4{margin-bottom:1rem;display:inline-block}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2ltcGxlLnN2ZWx0ZSIsInNvdXJjZXMiOlsiU2ltcGxlLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBleHBvcnQgbGV0IGRhdGEsIGhlbHBlcnM7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICBhIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfTwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPntkYXRhLnRpdGxlfTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48YSBocmVmPVwiL1wiPiZMZWZ0QXJyb3c7IEhvbWU8L2E+XG5cbjxoMT57ZGF0YS50aXRsZX08L2gxPlxuXG48dWw+XG4gIHsjZWFjaCBkYXRhLnN0ZXBzIGFzIHN0ZXB9XG4gICAgPGxpPntzdGVwfTwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+XG5cbntAaHRtbCBkYXRhLmNvbnRlbnR9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0UsQ0FBQyxjQUFDLENBQUMsQUFDRCxhQUFhLENBQUUsSUFBSSxDQUNuQixPQUFPLENBQUUsWUFBWSxBQUN2QixDQUFDIn0= */`;

// home.css
const cssHome = `.banner.svelte-au0a7c{padding:1rem 2rem;background:#eee;border-radius:2rem;margin-bottom:1rem}.entries.svelte-au0a7c{display:grid;grid-template-columns:1fr;margin:3rem 0}@media(min-width: 768px){.entries.svelte-au0a7c{display:grid;grid-template-columns:1fr 1fr 1fr;margin:3rem 0}.entries .entry{margin-right:1rem}}.entry{padding:1rem;border:1px solid #ddd;border-radius:1rem;margin-bottom:1rem;background:white}.about.svelte-au0a7c{margin-bottom:2rem}@media(min-width: 768px){.hydrate.svelte-au0a7c{display:grid;grid-template-columns:80% 20%}}.hooks.svelte-au0a7c{display:grid;grid-template-columns:100%}@media(min-width: 768px){.hooks.svelte-au0a7c{grid-template-columns:50% 50%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */`;

const cssClock = `svg.svelte-74ebks{width:100%;height:100%}.clock-face.svelte-74ebks{stroke:#333;fill:white}.minor.svelte-74ebks{stroke:#999;stroke-width:0.5}.major.svelte-74ebks{stroke:#333;stroke-width:1}.hour.svelte-74ebks{stroke:#333}.minute.svelte-74ebks{stroke:#666}.second.svelte-74ebks,.second-counterweight.svelte-74ebks{stroke:rgb(180, 0, 0)}.second-counterweight.svelte-74ebks{stroke-width:3}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xvY2suc3ZlbHRlIiwic291cmNlcyI6WyJDbG9jay5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgaW1wb3J0IHsgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSc7XG5cbiAgbGV0IHRpbWUgPSBuZXcgRGF0ZSgpO1xuXG4gIC8vIHRoZXNlIGF1dG9tYXRpY2FsbHkgdXBkYXRlIHdoZW4gYHRpbWVgXG4gIC8vIGNoYW5nZXMsIGJlY2F1c2Ugb2YgdGhlIGAkOmAgcHJlZml4XG4gICQ6IGhvdXJzID0gdGltZS5nZXRIb3VycygpO1xuICAkOiBtaW51dGVzID0gdGltZS5nZXRNaW51dGVzKCk7XG4gICQ6IHNlY29uZHMgPSB0aW1lLmdldFNlY29uZHMoKTtcblxuICBvbk1vdW50KCgpID0+IHtcbiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIHRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgIH0sIDEwMDApO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICAgIH07XG4gIH0pO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbiAgc3ZnIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cblxuICAuY2xvY2stZmFjZSB7XG4gICAgc3Ryb2tlOiAjMzMzO1xuICAgIGZpbGw6IHdoaXRlO1xuICB9XG5cbiAgLm1pbm9yIHtcbiAgICBzdHJva2U6ICM5OTk7XG4gICAgc3Ryb2tlLXdpZHRoOiAwLjU7XG4gIH1cblxuICAubWFqb3Ige1xuICAgIHN0cm9rZTogIzMzMztcbiAgICBzdHJva2Utd2lkdGg6IDE7XG4gIH1cblxuICAuaG91ciB7XG4gICAgc3Ryb2tlOiAjMzMzO1xuICB9XG5cbiAgLm1pbnV0ZSB7XG4gICAgc3Ryb2tlOiAjNjY2O1xuICB9XG5cbiAgLnNlY29uZCxcbiAgLnNlY29uZC1jb3VudGVyd2VpZ2h0IHtcbiAgICBzdHJva2U6IHJnYigxODAsIDAsIDApO1xuICB9XG5cbiAgLnNlY29uZC1jb3VudGVyd2VpZ2h0IHtcbiAgICBzdHJva2Utd2lkdGg6IDM7XG4gIH08L3N0eWxlPlxuXG48c3ZnIHZpZXdCb3g9XCItNTAgLTUwIDEwMCAxMDBcIj5cbiAgPGNpcmNsZSBjbGFzcz1cImNsb2NrLWZhY2VcIiByPVwiNDhcIiAvPlxuXG4gIDwhLS0gbWFya2VycyAtLT5cbiAgeyNlYWNoIFswLCA1LCAxMCwgMTUsIDIwLCAyNSwgMzAsIDM1LCA0MCwgNDUsIDUwLCA1NV0gYXMgbWludXRlfVxuICAgIDxsaW5lIGNsYXNzPVwibWFqb3JcIiB5MT1cIjM1XCIgeTI9XCI0NVwiIHRyYW5zZm9ybT1cInJvdGF0ZSh7MzAgKiBtaW51dGV9KVwiIC8+XG5cbiAgICB7I2VhY2ggWzEsIDIsIDMsIDRdIGFzIG9mZnNldH1cbiAgICAgIDxsaW5lIGNsYXNzPVwibWlub3JcIiB5MT1cIjQyXCIgeTI9XCI0NVwiIHRyYW5zZm9ybT1cInJvdGF0ZSh7NiAqIChtaW51dGUgKyBvZmZzZXQpfSlcIiAvPlxuICAgIHsvZWFjaH1cbiAgey9lYWNofVxuXG4gIDwhLS0gaG91ciBoYW5kIC0tPlxuICA8bGluZSBjbGFzcz1cImhvdXJcIiB5MT1cIjJcIiB5Mj1cIi0yMFwiIHRyYW5zZm9ybT1cInJvdGF0ZSh7MzAgKiBob3VycyArIG1pbnV0ZXMgLyAyfSlcIiAvPlxuXG4gIDwhLS0gbWludXRlIGhhbmQgLS0+XG4gIDxsaW5lIGNsYXNzPVwibWludXRlXCIgeTE9XCI0XCIgeTI9XCItMzBcIiB0cmFuc2Zvcm09XCJyb3RhdGUoezYgKiBtaW51dGVzICsgc2Vjb25kcyAvIDEwfSlcIiAvPlxuXG4gIDwhLS0gc2Vjb25kIGhhbmQgLS0+XG4gIDxnIHRyYW5zZm9ybT1cInJvdGF0ZSh7NiAqIHNlY29uZHN9KVwiPlxuICAgIDxsaW5lIGNsYXNzPVwic2Vjb25kXCIgeTE9XCIxMFwiIHkyPVwiLTM4XCIgLz5cbiAgICA8bGluZSBjbGFzcz1cInNlY29uZC1jb3VudGVyd2VpZ2h0XCIgeTE9XCIxMFwiIHkyPVwiMlwiIC8+XG4gIDwvZz5cbjwvc3ZnPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVCRSxHQUFHLGNBQUMsQ0FBQyxBQUNILEtBQUssQ0FBRSxJQUFJLENBQ1gsTUFBTSxDQUFFLElBQUksQUFDZCxDQUFDLEFBRUQsV0FBVyxjQUFDLENBQUMsQUFDWCxNQUFNLENBQUUsSUFBSSxDQUNaLElBQUksQ0FBRSxLQUFLLEFBQ2IsQ0FBQyxBQUVELE1BQU0sY0FBQyxDQUFDLEFBQ04sTUFBTSxDQUFFLElBQUksQ0FDWixZQUFZLENBQUUsR0FBRyxBQUNuQixDQUFDLEFBRUQsTUFBTSxjQUFDLENBQUMsQUFDTixNQUFNLENBQUUsSUFBSSxDQUNaLFlBQVksQ0FBRSxDQUFDLEFBQ2pCLENBQUMsQUFFRCxLQUFLLGNBQUMsQ0FBQyxBQUNMLE1BQU0sQ0FBRSxJQUFJLEFBQ2QsQ0FBQyxBQUVELE9BQU8sY0FBQyxDQUFDLEFBQ1AsTUFBTSxDQUFFLElBQUksQUFDZCxDQUFDLEFBRUQscUJBQU8sQ0FDUCxxQkFBcUIsY0FBQyxDQUFDLEFBQ3JCLE1BQU0sQ0FBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxBQUN4QixDQUFDLEFBRUQscUJBQXFCLGNBQUMsQ0FBQyxBQUNyQixZQUFZLENBQUUsQ0FBQyxBQUNqQixDQUFDIn0= */`;

const cssHookDetail = `.list.svelte-obuov5.svelte-obuov5{display:block;margin-bottom:0.5rem;font-size:13px}.list.svelte-obuov5 .code.svelte-obuov5{cursor:help}.hook.svelte-obuov5.svelte-obuov5{max-width:100%;text-overflow:wrap;padding:1rem;border:1px solid #ddd;border-collapse:collapse;margin-bottom:1rem;border-radius:1rem;position:relative;background:white}.hook-number.svelte-obuov5.svelte-obuov5{position:absolute;top:0;right:0px;width:2rem;height:1.75rem;border-top-right-radius:1rem;border-bottom-left-radius:1rem;text-align:center;padding-top:3px;background:#ddd;font-size:14px}.overview.svelte-obuov5.svelte-obuov5{margin-right:1rem}@media(min-width: 768px){.hook.svelte-obuov5.svelte-obuov5:nth-child(even){margin-left:0.5rem}.hook.svelte-obuov5.svelte-obuov5:nth-child(odd){margin-right:0.5rem}}.use.svelte-obuov5.svelte-obuov5{font-size:14px}.use ul{padding-left:1rem}.overview.svelte-obuov5.svelte-obuov5{margin-bottom:0.75rem;padding-bottom:0.75rem;border-bottom:1px solid #ddd}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG9va0RldGFpbC5zdmVsdGUiLCJzb3VyY2VzIjpbIkhvb2tEZXRhaWwuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgaG9vaztcbiAgZXhwb3J0IGxldCBpO1xuICBleHBvcnQgbGV0IGhvb2tFbnRpdHlEZWZpbml0aW9ucztcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIC5saXN0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICB9XG5cbiAgLmxpc3QgLmNvZGUge1xuICAgIGN1cnNvcjogaGVscDtcbiAgfVxuXG4gIC5ob29rIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1vdmVyZmxvdzogd3JhcDtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICB9XG5cbiAgLmhvb2stbnVtYmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgd2lkdGg6IDJyZW07XG4gICAgaGVpZ2h0OiAxLjc1cmVtO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxcmVtO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDFyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiAzcHg7XG4gICAgYmFja2dyb3VuZDogI2RkZDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cblxuICAub3ZlcnZpZXcge1xuICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgfVxuXG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5ob29rOm50aC1jaGlsZChldmVuKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMC41cmVtO1xuICAgIH1cbiAgICAuaG9vazpudGgtY2hpbGQob2RkKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgICB9XG4gIH1cblxuICAudXNlIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbiAgOmdsb2JhbCgudXNlIHVsKSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICB9XG5cbiAgLm92ZXJ2aWV3IHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjc1cmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjc1cmVtO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICB9PC9zdHlsZT5cblxuPGRpdiBjbGFzcz1cImhvb2tcIj5cbiAgeyNpZiBpIHx8IGkgPT09IDB9PHNwYW4gY2xhc3M9XCJob29rLW51bWJlclwiPntpICsgMX0uPC9zcGFuPnsvaWZ9XG5cbiAgPGRpdiBjbGFzcz1cIm92ZXJ2aWV3XCI+XG4gICAgPHNwYW4gY2xhc3M9XCJob29rLW5hbWVcIj5cbiAgICAgIHsjaWYgaG9vay5saW5rICYmIGhvb2subGluay5sZW5ndGggPiAwfTxhIGhyZWY9e2hvb2subGlua30+e2hvb2suaG9va308L2E+ezplbHNlfXtob29rLmhvb2t9ey9pZn1cbiAgICA8L3NwYW4+IDoge2hvb2suY29udGV4dH1cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJ1c2VcIj5cbiAgICB7QGh0bWwgaG9vay51c2V9XG4gIDwvZGl2PlxuXG4gIDxkaXYgY2xhc3M9XCJsaXN0XCI+XG4gICAgPHN0cm9uZz5Qcm9wczwvc3Ryb25nPiA6IHsjZWFjaCBob29rLnByb3BzIGFzIHByb3B9XG4gICAgICA8ZGl2IGNsYXNzPVwiY29kZVwiIGRhdGEtYmFsbG9vbi1sZW5ndGg9XCJtZWRpdW1cIiBkYXRhLWJhbGxvb24tcG9zPVwidXBcIiBhcmlhLWxhYmVsPXtob29rRW50aXR5RGVmaW5pdGlvbnNbcHJvcF19PlxuICAgICAgICB7cHJvcH1cbiAgICAgIDwvZGl2PlxuICAgIHsvZWFjaH1cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJsaXN0XCI+XG4gICAgPHN0cm9uZz5NdXRhYmxlPC9zdHJvbmc+IDogeyNlYWNoIGhvb2subXV0YWJsZSBhcyBtdXRhYmxlfVxuICAgICAgPGRpdiBjbGFzcz1cImNvZGVcIiBkYXRhLWJhbGxvb24tbGVuZ3RoPVwibWVkaXVtXCIgZGF0YS1iYWxsb29uLXBvcz1cInVwXCIgYXJpYS1sYWJlbD17aG9va0VudGl0eURlZmluaXRpb25zW211dGFibGVdfT5cbiAgICAgICAge211dGFibGV9XG4gICAgICA8L2Rpdj5cbiAgICB7L2VhY2h9XG4gIDwvZGl2PlxuXG4gIHsjaWYgaG9vay5hZHZhbmNlZH1cbiAgICA8ZGl2PjxzbWFsbD5UaGlzIGhvb2sgaXMgYW4gJ2FkdmFuY2VkJyBob29rIG1lYW5pbmcgaXQgZ2VhcmVkIHRvd2FyZHMgYWR2YW5jZWQgdXNlcnMgb3IgcGx1Z2lucy48L3NtYWxsPjwvZGl2PlxuICB7L2lmfVxuXG4gIDxzbWFsbD57aG9vay5leHBpcmVtZW50YWwgPyAnRXhwaXJlbWVudGFsJyA6ICdTdGFibGUnfSAmbWlkZG90OyBMb2NhdGlvbjoge2hvb2subG9jYXRpb259PC9zbWFsbD5cbjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9FLEtBQUssNEJBQUMsQ0FBQyxBQUNMLE9BQU8sQ0FBRSxLQUFLLENBQ2QsYUFBYSxDQUFFLE1BQU0sQ0FDckIsU0FBUyxDQUFFLElBQUksQUFDakIsQ0FBQyxBQUVELG1CQUFLLENBQUMsS0FBSyxjQUFDLENBQUMsQUFDWCxNQUFNLENBQUUsSUFBSSxBQUNkLENBQUMsQUFFRCxLQUFLLDRCQUFDLENBQUMsQUFDTCxTQUFTLENBQUUsSUFBSSxDQUNmLGFBQWEsQ0FBRSxJQUFJLENBQ25CLE9BQU8sQ0FBRSxJQUFJLENBQ2IsTUFBTSxDQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUN0QixlQUFlLENBQUUsUUFBUSxDQUN6QixhQUFhLENBQUUsSUFBSSxDQUNuQixhQUFhLENBQUUsSUFBSSxDQUNuQixRQUFRLENBQUUsUUFBUSxDQUNsQixVQUFVLENBQUUsS0FBSyxBQUNuQixDQUFDLEFBRUQsWUFBWSw0QkFBQyxDQUFDLEFBQ1osUUFBUSxDQUFFLFFBQVEsQ0FDbEIsR0FBRyxDQUFFLENBQUMsQ0FDTixLQUFLLENBQUUsR0FBRyxDQUNWLEtBQUssQ0FBRSxJQUFJLENBQ1gsTUFBTSxDQUFFLE9BQU8sQ0FDZix1QkFBdUIsQ0FBRSxJQUFJLENBQzdCLHlCQUF5QixDQUFFLElBQUksQ0FDL0IsVUFBVSxDQUFFLE1BQU0sQ0FDbEIsV0FBVyxDQUFFLEdBQUcsQ0FDaEIsVUFBVSxDQUFFLElBQUksQ0FDaEIsU0FBUyxDQUFFLElBQUksQUFDakIsQ0FBQyxBQUVELFNBQVMsNEJBQUMsQ0FBQyxBQUNULFlBQVksQ0FBRSxJQUFJLEFBQ3BCLENBQUMsQUFFRCxNQUFNLEFBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBQ3pCLGlDQUFLLFdBQVcsSUFBSSxDQUFDLEFBQUMsQ0FBQyxBQUNyQixXQUFXLENBQUUsTUFBTSxBQUNyQixDQUFDLEFBQ0QsaUNBQUssV0FBVyxHQUFHLENBQUMsQUFBQyxDQUFDLEFBQ3BCLFlBQVksQ0FBRSxNQUFNLEFBQ3RCLENBQUMsQUFDSCxDQUFDLEFBRUQsSUFBSSw0QkFBQyxDQUFDLEFBQ0osU0FBUyxDQUFFLElBQUksQUFDakIsQ0FBQyxBQUNPLE9BQU8sQUFBRSxDQUFDLEFBQ2hCLFlBQVksQ0FBRSxJQUFJLEFBQ3BCLENBQUMsQUFFRCxTQUFTLDRCQUFDLENBQUMsQUFDVCxhQUFhLENBQUUsT0FBTyxDQUN0QixjQUFjLENBQUUsT0FBTyxDQUN2QixhQUFhLENBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEFBQy9CLENBQUMifQ== */`;

const simpleSvelte = {
  exports: ['default'],
  facadeModuleId: '/Users/nick/repos/elderjs/template/src/routes/simple/Simple.svelte',
  isDynamicEntry: false,
  isEntry: true,
  isImplicitEntry: false,
  modules: {
    '/Users/nick/repos/elderjs/template/src/routes/simple/Simple.css': {
      originalLength: 1404,
      removedExports: [],
      renderedExports: [],
      renderedLength: 0,
    },
    '/Users/nick/repos/elderjs/template/src/routes/simple/Simple.svelte': {
      originalLength: 337,
      removedExports: [],
      renderedExports: [],
      renderedLength: 1829,
    },
  },
  type: 'chunk',
  code: undefined,
  dynamicImports: [],
  fileName: 'routes/Simple.js',
  implicitlyLoadedBefore: [],
  importedBindings: { 'index-f52204f9.js': ['create_ssr_component', 'escape', 'each'] },
  imports: ['index-f52204f9.js'],
  map: undefined,
  referencedFiles: [],
};

const homeSvelte = {
  exports: ['default'],
  facadeModuleId: '/Users/nick/repos/elderjs/template/src/routes/home/Home.svelte',
  isDynamicEntry: false,
  isEntry: true,
  isImplicitEntry: false,
  modules: {
    '/Users/nick/repos/elderjs/template/src/routes/home/Home.css': {
      originalLength: 12941,
      removedExports: [],
      renderedExports: [],
      renderedLength: 0,
    },
    '/Users/nick/repos/elderjs/template/src/routes/home/Home.svelte': {
      originalLength: 5694,
      removedExports: [],
      renderedExports: [],
      renderedLength: 15667,
    },
  },
  name: [],
  type: 'chunk',
  code: undefined,
  dynamicImports: [],
  fileName: 'routes/Home.js',
  implicitlyLoadedBefore: [],
  importedBindings: {
    'index-f52204f9.js': ['create_ssr_component', 'escape', 'each', 'validate_component', 'add_attribute'],
    'components/HookDetail.js': ['default'],
    'components/BlogTeaser.js': ['default'],
    'components/Clock.js': [],
  },
  imports: ['index-f52204f9.js', 'components/HookDetail.js', 'components/BlogTeaser.js', 'components/Clock.js'],
  map: undefined,
  referencedFiles: [],
};

beforeEach(() => {
  jest.resetModules();
});

describe('#rollupPluginHandleCss', () => {
  describe('#name', () => {
    const { name } = rollupPluginHandleCss({ rootDir: 'test' });
    test('name', () => expect(name).toBe('elderjs-handle-css'));
  });

  describe('#splitCssSourceMap', () => {
    test('v1', () => {
      const [code, map] = splitCssSourceMap(cssCode1);
      expect(code).toBe('a.svelte-6ghev4{margin-bottom:1rem;display:inline-block}');
      expect(map).toContain(
        `eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2ltcGxlLnN2ZWx0ZSIsInNvdXJjZXMiOlsiU2ltcGxlLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBleHBvcnQgbGV0IGRhdGEsIGhlbHBlcnM7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICBhIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfTwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPntkYXRhLnRpdGxlfTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48YSBocmVmPVwiL1wiPiZMZWZ0QXJyb3c7IEhvbWU8L2E+XG5cbjxoMT57ZGF0YS50aXRsZX08L2gxPlxuXG48dWw+XG4gIHsjZWFjaCBkYXRhLnN0ZXBzIGFzIHN0ZXB9XG4gICAgPGxpPntzdGVwfTwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+XG5cbntAaHRtbCBkYXRhLmNvbnRlbnR9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0UsQ0FBQyxjQUFDLENBQUMsQUFDRCxhQUFhLENBQUUsSUFBSSxDQUNuQixPQUFPLENBQUUsWUFBWSxBQUN2QixDQUFDIn0=`,
      );
    });

    test('v2', () => {
      const [code, map] = splitCssSourceMap(cssHome);
      expect(code).toBe(
        '.banner.svelte-au0a7c{padding:1rem 2rem;background:#eee;border-radius:2rem;margin-bottom:1rem}.entries.svelte-au0a7c{display:grid;grid-template-columns:1fr;margin:3rem 0}@media(min-width: 768px){.entries.svelte-au0a7c{display:grid;grid-template-columns:1fr 1fr 1fr;margin:3rem 0}.entries .entry{margin-right:1rem}}.entry{padding:1rem;border:1px solid #ddd;border-radius:1rem;margin-bottom:1rem;background:white}.about.svelte-au0a7c{margin-bottom:2rem}@media(min-width: 768px){.hydrate.svelte-au0a7c{display:grid;grid-template-columns:80% 20%}}.hooks.svelte-au0a7c{display:grid;grid-template-columns:100%}@media(min-width: 768px){.hooks.svelte-au0a7c{grid-template-columns:50% 50%}}',
      );
      expect(map).toBe(
        ` `,
      );
    });
  });

  describe('#transform', () => {
    test('That it returns empty string for css', () => {
      const { transform } = rollupPluginHandleCss({ rootDir: 'test' });
      expect(transform(cssCode1, '/Users/nick/repos/elderjs/template/src/components/Simple.css')).toBe('');
    });
  });

  describe('#renderChunk', () => {
    it('Single file finds the needed css', () => {
      const { transform, renderChunk } = rollupPluginHandleCss({ rootDir: '/Users/nick/repos/elderjs/template' });
      transform(cssCode1, '/Users/nick/repos/elderjs/template/src/routes/simple/Simple.css');
      const output = renderChunk('', simpleSvelte);
      expect(output).toContain(`module.exports._css = "a.svelte-6ghev4{margin-bottom:1rem;display:inline-block}";`);
      // eslint-disable-next-line no-useless-escape
      expect(output).toContain(`module.exports._cssIncluded = ["routes/Simple.css"]`);
      expect(output).toContain(`module.exports._cssMap = `);
      expect(output).toContain(`sourceMappingURL=data:application`);
    });

    it('Home.svelte works normal rollup mode and finds multiple dependencies', () => {
      const { transform, renderChunk } = rollupPluginHandleCss({ rootDir: '/Users/nick/repos/elderjs/template' });
      transform(cssHookDetail, '/Users/nick/repos/elderjs/template/src/components/HookDetail.css');
      transform(cssClock, '/Users/nick/repos/elderjs/template/src/components/Clock.css');
      transform(cssHome, '/Users/nick/repos/elderjs/template/src/routes/home/Home.css');
      const output = renderChunk('', homeSvelte);
      expect(output).toContain(
        `module.exports._css = ".banner.svelte-au0a7c{padding:1rem 2rem;background:#eee;border-radius:2rem;margin-bottom:1rem}.entries.svelte-au0a7c{display:grid;grid-template-columns:1fr;margin:3rem 0}@media(min-width: 768px){.entries.svelte-au0a7c{display:grid;grid-template-columns:1fr 1fr 1fr;margin:3rem 0}.entries .entry{margin-right:1rem}}.entry{padding:1rem;border:1px solid #ddd;border-radius:1rem;margin-bottom:1rem;background:white}.about.svelte-au0a7c{margin-bottom:2rem}@media(min-width: 768px){.hydrate.svelte-au0a7c{display:grid;grid-template-columns:80% 20%}}.hooks.svelte-au0a7c{display:grid;grid-template-columns:100%}`,
      );
      // eslint-disable-next-line no-useless-escape
      expect(output).toContain(
        `module.exports._cssIncluded = ["routes/Home.css","components/HookDetail.css","components/Clock.css"]`,
      );
      expect(output).toContain(
        `module.exports._cssMap = "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,`,
      );
    });
  });
});
